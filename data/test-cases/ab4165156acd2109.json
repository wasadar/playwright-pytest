{"uid":"ab4165156acd2109","name":"test_case_6[chromium]","fullName":"test.test_misc#test_case_6","historyId":"6268814cfc8f16360cecbe560773a460","time":{"start":1704415339341,"stop":1704415345136,"duration":5795},"status":"failed","statusMessage":"AssertionError: Success message is not shown or is wrong\nassert '' == 'Success! You...successfully.'\n  - Success! Your details have been submitted successfully.","statusTrace":"page = <Page url='https://www.automationexercise.com/contact_us'>\n\n    def test_case_6(page: Page):\n        home = HomePage(page)\n        contact = ContactPage(page)\n    \n        home.open() # step 2\n        allure.attach( body=page.screenshot(full_page=True), name=\"case 6 step 2\", attachment_type=allure.attachment_type.PNG)\n        practice_header = home.getElement(home.practice_header) # step 3\n        home_link = home.getElement(home.home_link)\n        assert home.isVisible(practice_header) and home.isOpened(home_link), \"Home page is not visible\"\n        allure.attach( body=page.screenshot(full_page=True), name=\"case 6 step 3\", attachment_type=allure.attachment_type.PNG)\n        home.clickButton(home.getElement(home.concat_us_link)) # step 4\n        allure.attach( body=page.screenshot(full_page=True), name=\"case 6 step 4\", attachment_type=allure.attachment_type.PNG)\n        get_in_touch_enscription = contact.getElement(contact.get_in_touch_enscription) # step 5\n        assert contact.isVisible(get_in_touch_enscription), \"Get in touch enscription is not visible\"\n        allure.attach( body=page.screenshot(full_page=True), name=\"case 6 step 5\", attachment_type=allure.attachment_type.PNG)\n        contact.inputText(contact.getElement(contact.name_contact_field), ''.join(fake.random_letters(6))) # step 6\n        contact.inputText(contact.getElement(contact.email_contact_field), fake.email())\n        contact.inputText(contact.getElement(contact.subject_contact_field), ''.join(fake.random_letters(15)))\n        contact.inputText(contact.getElement(contact.message_contact_field), fake.text())\n        allure.attach( body=page.screenshot(full_page=True), name=\"case 6 step 6\", attachment_type=allure.attachment_type.PNG)\n        contact.loadFile(contact.getElement(contact.file_contact_field), os.path.abspath(\"../file-for-loading.txt\")) # step 7\n        allure.attach( body=page.screenshot(full_page=True), name=\"case 6 step 7\", attachment_type=allure.attachment_type.PNG)\n        contact.clickButton(contact.getElement(contact.submit_button)) # step 8\n        allure.attach( body=page.screenshot(full_page=True), name=\"case 6 step 8\", attachment_type=allure.attachment_type.PNG)\n        contact.acceptDialogue() # step 9\n        allure.attach( body=page.screenshot(full_page=True), name=\"case 6 step 9\", attachment_type=allure.attachment_type.PNG)\n        success_message = contact.getElement(contact.success_message) # step 10\n>       assert contact.getText(success_message) == \"Success! Your details have been submitted successfully.\", \"Success message is not shown or is wrong\"\nE       AssertionError: Success message is not shown or is wrong\nE       assert '' == 'Success! You...successfully.'\nE         - Success! Your details have been submitted successfully.\n\ntest/test_misc.py:40: AssertionError","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"_session_faker","time":{"start":1704415281553,"stop":1704415281571,"duration":18},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"pytestconfig","time":{"start":1704415281571,"stop":1704415281571,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"base_url","time":{"start":1704415281571,"stop":1704415281571,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"_verify_url","time":{"start":1704415281571,"stop":1704415281571,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"browser_type_launch_args","time":{"start":1704415281571,"stop":1704415281571,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"delete_output_dir","time":{"start":1704415281571,"stop":1704415281571,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"playwright","time":{"start":1704415281571,"stop":1704415281782,"duration":211},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"launch_browser","time":{"start":1704415281783,"stop":1704415281783,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"browser_type","time":{"start":1704415281783,"stop":1704415281783,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"browser","time":{"start":1704415281783,"stop":1704415287766,"duration":5983},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"device","time":{"start":1704415287766,"stop":1704415287766,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"browser_context_args","time":{"start":1704415287766,"stop":1704415287766,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"context","time":{"start":1704415339302,"stop":1704415339307,"duration":5},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"page","time":{"start":1704415339307,"stop":1704415339340,"duration":33},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"testStage":{"status":"failed","statusMessage":"AssertionError: Success message is not shown or is wrong\nassert '' == 'Success! You...successfully.'\n  - Success! Your details have been submitted successfully.","statusTrace":"page = <Page url='https://www.automationexercise.com/contact_us'>\n\n    def test_case_6(page: Page):\n        home = HomePage(page)\n        contact = ContactPage(page)\n    \n        home.open() # step 2\n        allure.attach( body=page.screenshot(full_page=True), name=\"case 6 step 2\", attachment_type=allure.attachment_type.PNG)\n        practice_header = home.getElement(home.practice_header) # step 3\n        home_link = home.getElement(home.home_link)\n        assert home.isVisible(practice_header) and home.isOpened(home_link), \"Home page is not visible\"\n        allure.attach( body=page.screenshot(full_page=True), name=\"case 6 step 3\", attachment_type=allure.attachment_type.PNG)\n        home.clickButton(home.getElement(home.concat_us_link)) # step 4\n        allure.attach( body=page.screenshot(full_page=True), name=\"case 6 step 4\", attachment_type=allure.attachment_type.PNG)\n        get_in_touch_enscription = contact.getElement(contact.get_in_touch_enscription) # step 5\n        assert contact.isVisible(get_in_touch_enscription), \"Get in touch enscription is not visible\"\n        allure.attach( body=page.screenshot(full_page=True), name=\"case 6 step 5\", attachment_type=allure.attachment_type.PNG)\n        contact.inputText(contact.getElement(contact.name_contact_field), ''.join(fake.random_letters(6))) # step 6\n        contact.inputText(contact.getElement(contact.email_contact_field), fake.email())\n        contact.inputText(contact.getElement(contact.subject_contact_field), ''.join(fake.random_letters(15)))\n        contact.inputText(contact.getElement(contact.message_contact_field), fake.text())\n        allure.attach( body=page.screenshot(full_page=True), name=\"case 6 step 6\", attachment_type=allure.attachment_type.PNG)\n        contact.loadFile(contact.getElement(contact.file_contact_field), os.path.abspath(\"../file-for-loading.txt\")) # step 7\n        allure.attach( body=page.screenshot(full_page=True), name=\"case 6 step 7\", attachment_type=allure.attachment_type.PNG)\n        contact.clickButton(contact.getElement(contact.submit_button)) # step 8\n        allure.attach( body=page.screenshot(full_page=True), name=\"case 6 step 8\", attachment_type=allure.attachment_type.PNG)\n        contact.acceptDialogue() # step 9\n        allure.attach( body=page.screenshot(full_page=True), name=\"case 6 step 9\", attachment_type=allure.attachment_type.PNG)\n        success_message = contact.getElement(contact.success_message) # step 10\n>       assert contact.getText(success_message) == \"Success! Your details have been submitted successfully.\", \"Success message is not shown or is wrong\"\nE       AssertionError: Success message is not shown or is wrong\nE       assert '' == 'Success! You...successfully.'\nE         - Success! Your details have been submitted successfully.\n\ntest/test_misc.py:40: AssertionError","steps":[],"attachments":[{"uid":"b76724284c836f7e","name":"case 6 step 2","source":"b76724284c836f7e.png","type":"image/png","size":3758593},{"uid":"3f9244ac5a2ba0ec","name":"case 6 step 3","source":"3f9244ac5a2ba0ec.png","type":"image/png","size":3758486},{"uid":"c2f30c82ff6ffa1b","name":"case 6 step 4","source":"c2f30c82ff6ffa1b.png","type":"image/png","size":94389},{"uid":"6d3c17698440685a","name":"case 6 step 5","source":"6d3c17698440685a.png","type":"image/png","size":94453},{"uid":"3dd7fa85d39e69a7","name":"case 6 step 6","source":"3dd7fa85d39e69a7.png","type":"image/png","size":108902},{"uid":"df19d4adaa1e0a48","name":"case 6 step 7","source":"df19d4adaa1e0a48.png","type":"image/png","size":109591},{"uid":"cc4b28ad68b98a0b","name":"case 6 step 8","source":"cc4b28ad68b98a0b.png","type":"image/png","size":109605},{"uid":"83d1b989b0055a87","name":"case 6 step 9","source":"83d1b989b0055a87.png","type":"image/png","size":109576}],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":8,"hasContent":true,"attachmentStep":false},"afterStages":[{"name":"context::0","time":{"start":1704415345143,"stop":1704415345154,"duration":11},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"page::0","time":{"start":1704415345143,"stop":1704415345143,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"browser::0","time":{"start":1704415375135,"stop":1704415375180,"duration":45},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"playwright::0","time":{"start":1704415375183,"stop":1704415375196,"duration":13},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"labels":[{"name":"parentSuite","value":"test"},{"name":"suite","value":"test_misc"},{"name":"host","value":"fv-az575-626"},{"name":"thread","value":"2395-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"test.test_misc"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"browser_name","value":"'chromium'"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Product defects","matchedStatuses":[],"flaky":false}],"tags":[]},"source":"ab4165156acd2109.json","parameterValues":["'chromium'"]}